<launch>

    <!-- <arg name="OBJECT" default="sphere"/> -->
    <arg name="GAZE" default="false"/>
    <arg name="GRIPPER" default="false"/>
    <arg name="GRIPPER_REAL" default="false"/>
    <arg name="TARGET_SIM" default="false"/>
    

    <group ns="lwr">
        <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_arm_motion)/models/robots/single_lwr_robot.urdf.xacro'"/> 
        <node name="lwr_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
           
    </group>

    <!-- GAZEBO -->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param /lwr/robot_description -urdf -model single_lwr_robot" respawn="false" output="screen" />
    <!-- enable/disable gui at will, the rviz listens to the simulation -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find robot_arm_motion)/cfg/worlds/lwr/simple_environment.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="false"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>


    <!-- load robotHW configurations to rosparam server -->
    <rosparam command="load" file="$(find robot_arm_motion)/cfg/robots/lwr/hw_interface.yaml"/>

    <!-- load all controller configurations to rosparam server -->
    <rosparam command="load" file="$(find robot_arm_motion)/cfg/robots/lwr/controllers.yaml"/>

    <!-- real robot and controllers -->
    <group ns="lwr">
        <!-- spawn only desired controllers in current namespace -->
        <node name="controller_spawner_js" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="kuka_joint_state_controller"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_controllers"/>
    </group>

    <node name="set_initial_pose" pkg="motion_example" type="moveToDesiredJoints" output="screen" args="30 40 0 -70 0 70 30"/>

    <group ns="target_obstacles_sim" unless="$(arg GAZE)">
        <rosparam file="$(find robot_arm_motion)/cfg/fake_target_obstacles.yaml" />

        <node name="target_publisher" pkg="robot_arm_motion" type="fake_target_publisher" output="screen"/>
    </group>

    <group ns="target_obstacles_sim" if="$(arg TARGET_SIM)">
        <rosparam file="$(find robot_arm_motion)/cfg/fake_target_obstacles.yaml" />

        <node name="target_sim" pkg="robot_arm_motion" type="target_selector" output="screen"/>
    </group>

    <group ns="target_obstacles_sim" if="$(arg GAZE)">
        <node name="obs_visualization" pkg="robot_arm_motion" type="obstacle_visualization" output="screen" />
    </group>

    <group ns="finger_tool" unless="$(arg GRIPPER)">
        <param name="robot_description" command="$(find xacro)/xacro $(find robot_arm_motion)/models/objects/finger_tool.urdf.xacro" />
        <node pkg="tf" type="static_transform_publisher" name="kuka_tool_broadcaster" args="0 0 0 0 0 0 1 lwr_7_link tool_base 100" />
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
    </group>

    <node name="load_dyn_params" pkg="dynamic_reconfigure" type="dynparam" args="load /lwr/joint_controllers/ds_param $(find robot_arm_motion)/cfg/ds_params/sim_ds_params.yaml"/>

    <group ns="gripper" if="$(arg GRIPPER)">
        <arg name="gripper_gui" default="Fasle" />
        <param name="robot_description" command="$(find xacro)/xacro $(find robot_arm_motion)/models/robots/robotiq_arg2f_85_model.xacro" />
        <param name="use_gui" value="$(arg gripper_gui)"/>
        <node name="gripper_sim" pkg="robot_arm_motion" type="gripper_sim.py" unless="$(arg GRIPPER_REAL)"/>
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
        <node pkg="tf" type="static_transform_publisher" name="kuka_tool_broadcaster" args="0 0 0 0 0 0 1 lwr_7_link robotiq_arg2f_base_link 100" />
        <node name="gripper_interface" pkg="robotiq_2f_gripper_control" type="Robotiq2FGripperTcpNode.py" args="192.168.1.11" respawn="true" output="screen" if="$(arg GRIPPER_REAL)"/>
        <node name="gripper_controller" pkg="robot_arm_motion" type="gripper_controller.py" output="screen"/>
    </group>


    <group>
        <node name="rviz_kuka" pkg="rviz" type="rviz" args="-d '$(find robot_arm_motion)/cfg/rviz/kuka_objects.rviz'" unless="$(arg GRIPPER)"/>

        <node name="rviz_kuka" pkg="rviz" type="rviz" args="-d '$(find robot_arm_motion)/cfg/rviz/kuka_gripper_objects.rviz'" if="$(arg GRIPPER)"/>
    </group>


</launch>